package cn.com.sparknet.nclk.devconfig.service.impl;

import java.io.InputStream;
import java.io.PrintWriter;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Service;

import cn.com.sparknet.common.json.EditJson;
import cn.com.sparknet.common.util.StringUtil;
import cn.com.sparknet.nclk.bean.FileInfo;
import cn.com.sparknet.nclk.devconfig.service.ClockTerminalConfigService;
import cn.com.sparknet.nclk.service.FileService;
/**
 * 网络时钟终端配置
 * @author wuyl
 *
 */
@Service
public class ClockTerminalConfigServiceImpl implements ClockTerminalConfigService {

	@Resource
	private FileService fileService;
	
	/**
	 * 下载模板
	 */
	@Override
	public void getDownloadTemplet(HttpServletResponse response) {
		try{
        	String directory="template/";
        	String fileName="考场子钟信息模板.xlsx";
        	InputStream is = ClockTerminalConfigServiceImpl.class.getClassLoader().getResourceAsStream(directory+fileName);
        	fileService.downloadFile(is, fileName, response);
        }catch(Exception e){
        	throw new RuntimeException(e.getMessage(),e);
        }
	}
	
	/**
	 * 上传模板
	 */
	@Override
	public void submitUpload(HttpServletRequest request, HttpServletResponse response) {
		PrintWriter out=null;
		EditJson editJson=new EditJson();
        try{
        	response.setCharacterEncoding("UTF-8");
        	response.setContentType("text/html;charset=UTF-8");
        	out=response.getWriter();
        	//上传Excel文件
        	List<FileInfo> fileInfos=fileService.uploadFile(request);
        	for(FileInfo fileInfo:fileInfos){
        		//解析Excel文件
        		//this.resolveExcel(fileInfo);
        		editJson.setBean(StringUtil.getDateTime()+" 初始化权限成功！");
     			editJson.setSuccess(true);
        	}
 			out.print(editJson.toJsonString());
        }catch(Exception e){
        	editJson.setBean(StringUtil.getDateTime()+" 初始化权限失败："+e.getMessage());
			editJson.setSuccess(false);
			out.print(editJson.toJsonString());
        	throw new RuntimeException(e.getMessage(),e);
        }finally{
        	if(null!=out){
        		out.flush();
        		out.close();
        		out=null;
        	}
        }
    }

}
